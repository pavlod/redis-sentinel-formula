# sentinel.conf - this file is initially generated by salt, and afterwards,
# updated by sentinel itself.  Rerunning the sentinel states will not overwrite
# it, the file must first be removed

# daemonize must be set to no when started from an upstart script
daemonize no
port {{ sentinel_port }}
pidfile /var/run/redis/redis_sentinel.pid
logfile /var/log/redis/redis_sentinel.log
dir /tmp

{#-
   Go through our shard groups (from pillar), add instances, tied to shards, only
   if the current minion is a member
#}
{%- for shard_group in shard_groups %}
  {%- for shard_group_name, shards in shard_group.iteritems() %}
    {%- for shard in shards %}
      {%- set shard_index = shard.keys()[0] %}
      {%- if grains['host'] in shard[shard_index]['members'] %}
        {%- set first_master_ip = salt['dnsutil.A'](shard[shard_index]['first_master'])[0] %}
        {%- set master_id = 'master_' + shard_group_name + '_' + shard_index|string %}

sentinel monitor {{ master_id }} {{ first_master_ip }} {{ shard[shard_index]['port']|string }} {{ shard[shard_index]['sentinel_conf']['quorum_size']|string }}
sentinel auth-pass {{ master_id }} {{ shard[shard_index]['sentinel_conf']['auth_pass'] }}
sentinel down-after-milliseconds {{ master_id }} {{ shard[shard_index]['sentinel_conf']['down_after_milliseconds'] }}
sentinel parallel-syncs {{ master_id }} {{ shard[shard_index]['sentinel_conf']['parallel_syncs'] }}
sentinel failover-timeout {{ master_id }} {{ shard[shard_index]['sentinel_conf']['failover_timeout'] }}

      {%- endif %}
    {%- endfor %}
  {%- endfor %}
{%- endfor %}
